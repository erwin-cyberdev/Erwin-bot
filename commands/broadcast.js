// commands/broadcast.js - Owner only
import { isOwner } from '../utils/permissions.js'

export default async function (sock, msg, args) {
  const from = msg.key.remoteJid
  const sender = msg.key.participant || msg.key.remoteJid

  // V√©rifier que c'est le owner
  if (!isOwner(sender)) {
    return await sock.sendMessage(from, { 
      text: '‚õî Cette commande est r√©serv√©e au propri√©taire du bot.' 
    }, { quoted: msg })
  }

  const message = args.join(' ').trim()
  if (!message) {
    return await sock.sendMessage(from, {
      text: '‚ùó Usage : `.broadcast <message>`\n\nüí° Envoie un message √† tous les groupes o√π le bot est pr√©sent.'
    }, { quoted: msg })
  }

  try {
    // R√©cup√©rer tous les groupes
    const groups = await sock.groupFetchAllParticipating()
    const groupList = Object.values(groups)

    if (groupList.length === 0) {
      return await sock.sendMessage(from, {
        text: '‚ö†Ô∏è Le bot n\'est dans aucun groupe.'
      }, { quoted: msg })
    }

    await sock.sendMessage(from, {
      text: `üì¢ Envoi du broadcast √† ${groupList.length} groupe(s)...`
    }, { quoted: msg })

    let success = 0
    let failed = 0

    // Envoyer le message √† chaque groupe
    for (const group of groupList) {
      try {
        const broadcastMsg = `üì¢ *Message du propri√©taire du bot*\n\n${message}\n\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n_Broadcast envoy√© √† tous les groupes_`
        await sock.sendMessage(group.id, { text: broadcastMsg })
        success++
        // D√©lai pour √©viter le spam
        await new Promise(res => setTimeout(res, 1000))
      } catch (e) {
        console.error(`Erreur broadcast groupe ${group.id}:`, e)
        failed++
      }
    }

    await sock.sendMessage(from, {
      text: `‚úÖ Broadcast termin√© !\n\n‚úîÔ∏è Envoy√©s : ${success}\n‚ùå √âchou√©s : ${failed}`
    }, { quoted: msg })

  } catch (err) {
    console.error('Erreur broadcast:', err)
    await sock.sendMessage(from, {
      text: '‚ùó Erreur lors du broadcast.'
    }, { quoted: msg })
  }
}
