// commands/calc.js
export default async function (sock, msg, args) {
  const from = msg.key.remoteJid

  if (args.length === 0) {
    await sock.sendMessage(from, { text: '‚ùó Utilisation : `.calc <expression>`\nExemple : `.calc (5 + 3) * 2`' }, { quoted: msg })
    return
  }

  const expression = args.join(' ')

  try {
    // V√©rification de s√©curit√© : uniquement chiffres et op√©rateurs math√©matiques simples
    if (!/^[0-9+\-*/().%\s]+$/.test(expression)) {
      await sock.sendMessage(from, { text: 'üö´ Expression invalide. Utilise uniquement des chiffres et op√©rateurs (+, -, *, /, %, (), .).' }, { quoted: msg })
      return
    }

    // Calcul s√©curis√©
    const result = Function(`"use strict"; return (${expression})`)()

    await sock.sendMessage(from, {
      text: `üßÆ *R√©sultat du calcul :*\n\`\`\`${expression} = ${result}\`\`\``
    }, { quoted: msg })

  } catch (err) {
    await sock.sendMessage(from, {
      text: `‚ö†Ô∏è Erreur dans l'expression : ${err.message}`
    }, { quoted: msg })
  }
}
