// commands/qrcode.js
import QRCode from 'qrcode'
import fs from 'fs'
import path from 'path'

export default async function (sock, msg, args) {
  const from = msg.key.remoteJid

  // R√©cup√©rer le num√©ro
  let number = args.join('').trim()

  if (!number) {
    return await sock.sendMessage(from, {
      text: '‚ùó Usage : `.qrcode <num√©ro>`\n\nüí° Exemples :\n‚Ä¢ `.qrcode 237674151474`\n‚Ä¢ `.qrcode +237674151474`\n‚Ä¢ `.qrcode 674151474`\n\nG√©n√®re un QR code WhatsApp pour le num√©ro.'
    }, { quoted: msg })
  }

  // Nettoyer le num√©ro (enlever espaces, +, -, parenth√®ses, etc.)
  number = number.replace(/[^0-9]/g, '')

  // Si le num√©ro est trop court, ajouter le pr√©fixe Cameroun par d√©faut
  if (number.length < 10) {
    number = '237' + number
  }

  // Valider la longueur du num√©ro
  if (number.length < 10 || number.length > 15) {
    return await sock.sendMessage(from, {
      text: '‚ö†Ô∏è Num√©ro invalide. Le num√©ro doit contenir entre 10 et 15 chiffres.\n\nüí° Exemples valides :\n‚Ä¢ `237674151474` (Cameroun)\n‚Ä¢ `33612345678` (France)\n‚Ä¢ `1234567890` (USA)'
    }, { quoted: msg })
  }

  try {
    await sock.sendMessage(from, {
      text: '‚è≥ G√©n√©ration du QR code en cours...'
    }, { quoted: msg })

    // Cr√©er l'URL WhatsApp
    const whatsappUrl = `https://wa.me/${number}`

    // G√©n√©rer le QR code en buffer
    const qrBuffer = await QRCode.toBuffer(whatsappUrl, {
      errorCorrectionLevel: 'H',
      type: 'png',
      quality: 0.95,
      margin: 1,
      width: 512,
      color: {
        dark: '#000000',
        light: '#FFFFFF'
      }
    })

    // Cr√©er un dossier temporaire si n√©cessaire
    const tempDir = path.resolve('./temp')
    if (!fs.existsSync(tempDir)) {
      fs.mkdirSync(tempDir, { recursive: true })
    }

    // Sauvegarder temporairement
    const tempPath = path.join(tempDir, `qr_${number}_${Date.now()}.png`)
    fs.writeFileSync(tempPath, qrBuffer)

    // Envoyer l'image
    await sock.sendMessage(from, {
      image: { url: tempPath },
      caption: `‚úÖ *QR Code WhatsApp*\n\nüì± Num√©ro : +${number}\nüîó Lien : ${whatsappUrl}\n\nüí° Scanne ce QR code pour ouvrir une conversation WhatsApp avec ce num√©ro.`
    }, { quoted: msg })

    // Nettoyer le fichier temporaire
    setTimeout(() => {
      try {
        if (fs.existsSync(tempPath)) fs.unlinkSync(tempPath)
      } catch (e) {
        console.error('Erreur suppression QR temp:', e)
      }
    }, 2000)

  } catch (err) {
    console.error('Erreur g√©n√©ration QR code:', err)
    await sock.sendMessage(from, {
      text: '‚ùó Erreur lors de la g√©n√©ration du QR code. R√©essaie avec un num√©ro valide.'
    }, { quoted: msg })
  }
}
